#!/usr/bin/env perl
use strict;
use warnings;

# Search CPAN distributions
#
# Example:
# $ perl parse-cpan # Show *every* distro!
# $ perl parse-cpan --or Math
# $ perl parse-cpan --or Music,MIDI
# $ perl parse-cpan --or \\bAI\\b  # Regular expression matching
# $ perl parse-cpan --or Math --and Geo
# $ perl parse-cpan --or Math --and Geo,Planar

use Getopt::Long;
use List::Util qw(all any);
use MetaCPAN::Client;
use Parse::CPAN::Packages::Fast;

STDOUT->autoflush;

my %opts = (
    file => $ENV{HOME} . '/.cpanm/sources/http%www.cpan.org/02packages.details.txt.gz',
    or   => '',
    and  => '',
);
GetOptions( \%opts,
    'file=s',
    'or=s',
    'and=s',
) or die("Error in command line arguments\n");

$opts{or}  = [ split /,/, $opts{or} ];
$opts{and} = [ split /,/, $opts{and} ];

print "Parsing $opts{file} ... ";
my $p = Parse::CPAN::Packages::Fast->new($opts{file});
print "Done.\n";
print "Processing...\n";

my $mcpan = MetaCPAN::Client->new;

my $i = 0;

for my $item ($p->distributions) {
    my $name = $item->dist;
    next unless $name;
    next if @{ $opts{or} } && !(any { $name =~ /$_/ } @{ $opts{or} });
    next if @{ $opts{and} } && !(all { $name =~ /$_/ } @{ $opts{and} });
    $i++;
    my $release = eval { $mcpan->release($name) };
    my $date = eval { $release->date } || '?';
    my $url = "https://metacpan.org/dist/$name";
    printf "%d. %s %s %s %s\n", $i, $url, $item->version, $date, $item->cpanid;
}
