#!/usr/bin/env perl
use strict;
use warnings;

use Date::Manip;
use HTML::TreeBuilder 5 -weak; # Ensure weak references in use
use List::Util qw/any/;
use HTTP::Simple;

my $include = shift || 'Math';
my $exclude = shift // 'Text,Task,Silly,Module,String,PHOENIXL,CryptX,stockmonkey,Bytes,Business,FormValidator,DBIx,Bundle,Nopaste,Acme';

$include = [ split /,/, $include ];
$exclude = [ split /,/, $exclude ];

my $url = 'https://www.cpan.org/modules/01modules.index.html';
my $content = get $url;

my $tree = HTML::TreeBuilder->new();
$tree->parse($content);
$tree->eof;

my $text = '';
for my $pre ( $tree->look_down( _tag => 'pre' ) ) {
    $text .= $pre->as_text;
}

my @matches;

my @lines = split /\n/, $text;
for my $line ( @lines ) {
    next unless any { $line =~ /$_/ } @$include;
    next if any { $line =~ /$_/ } @$exclude;
#    print "$line\n";

    # module, author, distribution, size, uploaded
    my @parts = $line =~ /^(\w+)\s+([A-Z]+)\s+(\S+)\s+(\d+\w)\s+(.*?)\s*\+?\s*$/g;
    next unless $parts[0];

    my $date = ParseDate( $parts[4] );
    $date =~ s/00:00:00//;
    push @matches, [ @parts, $date ];
}

my $i = 0;
for my $match ( sort { $a->[5] cmp $b->[5] } @matches ) {
    $i++;
    print $i, '. ', join( ', ', @$match ), "\n";
}
