#!/usr/bin/env perl
use strict;
use warnings;

use Date::Manip;
use HTTP::Simple;
use List::Util 'any';
use Mojo::DOM;

my $include = shift || 'Math';
my $exclude = shift // 'Text,Task,Silly,Module,String,PHOENIXL,CryptX,stockmonkey,Bytes,Business,FormValidator,DBIx,Bundle,Nopaste,Acme';

$include = [ split /,/, $include ];
$exclude = [ split /,/, $exclude ];

# These modules have no space separating the module and the author name
my $longs = qr/(?:ActiveRecord|ConfigReader|DataWarehouse|FormValidator|GoogleIDToken|KeywordsSpider|MetasploitExpress|NexposeSimpleXML|ProjectBuilder|RandomJungle|ReleaseAction|\w+?)/;

my $url = 'https://www.cpan.org/modules/01modules.index.html';
my $content = get $url;

my $dom = Mojo::DOM->new($content);
my @lines = split /\n/, $dom->at('pre')->all_text;

my @matches;

for my $line ( @lines ) {
    next unless any { $line =~ /$_/ } @$include;
    next if any { $line =~ /$_/ } @$exclude;

                         # module, author,    dist,   size,        uploaded
    my @parts = $line =~ /^($longs)\s*([A-Z]+)\s+(\S+)\s+([\d.]+\w)\s+(.*?)\s*\+?\s*$/;
    next unless $parts[0];

    my $date = ParseDate( $parts[4] );
    $date =~ s/00:00:00//;
    push @matches, [ @parts, $date ];
}

my $i = 0;
for my $match ( sort { $a->[5] cmp $b->[5] } @matches ) {
    $i++;
    print $i, '. ', join( ', ', @$match ), "\n";
}
